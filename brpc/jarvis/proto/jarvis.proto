syntax="proto3";
package jarvis;

import "table.proto";

option cc_generic_services = true;

message HttpRequest { };
message HttpResponse { };

enum HttpResponseDataFormat {
    AUTO    =   0;
    OPTIONS =   1;
    MAPPING =   2;
}

message financial_users_request {
    financial_users user    = 1;
}

message financial_users_response {
    enum rcode {
        ok = 0;
        dberr = 1;
    }
    rcode code     =  1;
    repeated financial_users users = 2;
}

message financial_request {
    financial_records record = 1;
};
message financial_response {
    enum rcode {
        ok = 0;
        dberr = 1;
    }
    rcode code     =  1;
    repeated financial_records records = 2;     // 记录数组
    int32 total                        = 3;     // 总数据量，用于分页展示
};

message task_response {
    enum rcode {
        ok = 0;
        dberr = 1;
    }
    rcode code = 1;
    string msg  = 2;
    repeated tasks task_list = 3;
    int32 total = 4;
}


service Jarvis {
    rpc TestQuery(HttpRequest) returns (HttpResponse);
    /* login */
    rpc Login(HttpRequest) returns (HttpResponse);


    /* financial users related */
    rpc GetFinancialUser(HttpRequest) returns (HttpResponse);
    rpc AddFinancialUser(financial_users_request) returns (financial_users_response);
    rpc DelFinancialUser(financial_users_request) returns (financial_users_response);
    rpc UpdFinancialUser(financial_users_request) returns (financial_users_response);


    /* financial records related */
    rpc GetFinancialRecord(HttpRequest) returns (HttpResponse);
    rpc AppendFinancialRecord(financial_request) returns (financial_response);
    rpc DeleteFinancialRecord(financial_request) returns (financial_response);
    rpc UpdateFinancialRecord(financial_request) returns (financial_response);

    /* financial asset related */
    rpc GetFinancialAsset(HttpRequest) returns (HttpResponse);


    // task related
    rpc GetTask(HttpRequest) returns (HttpResponse);
    rpc AddTask(HttpRequest) returns (HttpResponse);
    rpc UpdTask(HttpRequest) returns (HttpResponse);
    rpc DelTask(HttpRequest) returns (HttpResponse);
}