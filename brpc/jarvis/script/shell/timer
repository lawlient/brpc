#!/usr/bin/bash

declare -A CLASSIFY
CLASSIFY=(
    ["0"]='<span style="color:red">I</span>'
    ["1"]='<span style="color:black">T</span>'
    ["2"]='<span style="color:cyan">S</span>'
    ["3"]='<span style="color:gray">B</span>'
    ["4"]='<span style="color:pink">R</span>'
)
declare -A PN
PN=(
    ["0"]="P0"
    ["1"]="P1"
    ["2"]="P2"
    ["3"]="P3"
)
declare -A STATUS
STATUS=(
    ["0"]="☐"
    ["1"]="☑"
    ["2"]="☒"
)

function day_table() {
    day=$1
    #echo $day      # debug

    output=$(curl localhost/jarvis/Jarvis/GetTask?date=$day 2>/dev/null)
    output=$(echo $output | jq .data.items)

    [[ "[]" == "$output" ]] && return 0

    echo '<table class="table table-bordered">' >> $html
    echo "    <caption> $(date -d "$day" +"%F %A") </caption>" >>  $html
    echo "    <tr> " >> $html
    echo "        <th>事项</th>" >> $html
    echo "        <th>估时</th>" >> $html
    echo "        <th>耗时</th>" >> $html
    echo "        <th>优先级</th>" >> $html
    echo "        <th>类型</th>" >> $html
    echo "        <th>状态</th>" >> $html
    echo "    </tr>" >> $html

    for line in `seq 10`
    do
        row=$(($line - 1))
        task=$(echo $output | jq .[$row])
        [[ "null" == "$task" ]] && break
        #echo $task   # debug log

        echo "    <tr>" >> $html
        content=$(echo $task | jq .task)    # 字符串，包含"
        echo "        <td width="50%"> ${content//\"/} </td>" >> $html  # 删除所有"
        echo "        <td width="10%" align="center"> $(echo $task | jq .esthour) </td>" >> $html
        echo "        <td width="10%" align="center"> $(echo $task | jq .acthour) </td>" >> $html
        echo "        <td width="10%" align="center"> ${PN[$(echo $task | jq .priority)]} </td>" >> $html
        echo "        <td width="10%" align="center"> ${CLASSIFY[$(echo $task | jq .classify)]} </td>" >> $html
        echo "        <td width="10%" align="center"> ${STATUS[$(echo $task | jq .status)]} </td>" >> $html
        echo "    </tr>" >> $html
    done
    echo "</table>" >> $html
}

function html_body() {
    html=$1

    echo "<body>" >> $html

    echo "<header align='center'>" >> $html
    echo "JARVIS"   >> $html
    echo "</header>" >> $html

    # print every days' tasks in this week
    whichday=`date +%w`
    [[ 0 -eq "$whichday" ]] && whichday=7
    offset=$((1 - $whichday))

    for i in `seq 7`
    do 
        day_table $(date -d "$offset days" +"%F")
        offset=$(($offset + 1));
    done


    echo "</body>" >> $html
}



function html_head() {
    cat > $1 << EOF 
<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=no" />
    <title>TODO</title>
    <style type="text/css">
    .table{width:100%;max-width:100%;margin-bottom:4px;border-collapse:collapse;background-color:transparent;font-size:8px}
    td{padding:2px;line-height:1.42857143;vertical-align:top;border:1px solid #ddd;border-top:1px solid #ddd}
    .table-bordered{border:1px solid #ddd}
    </style>
</head>

EOF
}



function generate_html() {
    TMP=`mktemp` || exit 1
    #TMP="./tmp"

    html_head $TMP

    html_body $TMP

    grep table $TMP > /dev/null
    [[ 0 -eq $? ]] && jarvis -m $TMP

    trap 'rm -f "$TMP"' EXIT
}


generate_html
